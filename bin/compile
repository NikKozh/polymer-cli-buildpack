#!/bin/bash
# -*- shell-script -*-

# Run the npm/polymer/yarn build command.
#
# This compiles assets as outlined in your package.json scripts or
# as per the default polymer.json settings.

set -o errexit # exit on error

build_dir=$1
cache_dir=$2
env_dir=$3

cd $build_dir

if [ -f "$build_dir/yarn.lock" ]; then
  YARN=true
else
  YARN=false
fi

if grep '"build"' < $build_dir/package.json; then
  POLYMER=false
else
  POLYMER=true
fi

detect_package_manager() {
  case $YARN in
    true) echo "yarn";;
    *) echo "npm";;
  esac
}

detect_build_command() {
  case $POLYMER in
    true) echo "polymer";;
    *) echo detect_package_manager;;
  esac
}

# This function loads the Heroku settings variables from the files in
# `env_dir` and sets them up as environment variables.
# POLYMER-CLI-BUILDPACK probable doesn't need this?
export_env_dir() {
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

export_env_dir

echo "-----> node install"
NODE_DIR="node-v8.10.0-linux-x64"
NODE_TAR="$NODE_DIR.tar.gz"
wget -nv https://nodejs.org/dist/v8.10.0/$NODE_TAR
tar -zxf $NODE_TAR
export PATH="$PATH:$build_dir/$NODE_DIR/bin"

echo "-----> " detect_package_manager " install"

if $YARN; then
  yarn install
else
  npm install
fi

echo "-----> polymer 3 install"
npm install -g polymer-cli

echo "-----> " detect_build_command " build"

if $POLYMER; then
  polymer build
elif $YARN; then
  yarn build
else
  npm run build
fi

#echo "------> harp install"
#npm install harp -g

if ! $YARN; then
  echo "-----> npm prune"
  npm prune
fi
